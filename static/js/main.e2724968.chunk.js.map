{"version":3,"sources":["components/data.js","components/CountryTable.jsx","App.js","index.js"],"names":["tableHeader","CountryTable","countries","searchCountry","tableClass","imgClass","paperClass","useState","valueToOrderBy","setValueToOrderBy","orderDirection","setOrderDirection","rowsPerPage","setRowsPerPage","page","setPage","Paper","className","variant","Table","stickyHeader","size","TableHead","TableRow","TableCell","map","item","index","TableSortLabel","active","direction","onClick","name","isAsc","changeDirectionHandler","TableBody","filter","country","slice","sort","a","b","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","sortFunctionHandler","src","countryInfo","flag","alt","id","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","e","newPage","onChangeRowsPerPage","parseInt","target","value","useStyles","makeStyles","theme","root","width","textAlign","title","marginTop","fontWeight","input","margin","loader","paper","overflowX","border","table","cursor","transition","borderRadius","backgroundColor","img","height","objectFit","App","loading","setLoading","setCountries","setCountry","classes","fetch","response","json","data","console","log","useEffect","getCountryStatistics","Container","maxWidth","CircularProgress","Typography","Input","color","placeholder","onChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2724968.chunk.js","sourcesContent":["export const tableHeader = [\r\n  \"Country Name\",\r\n  \"Total Cases\",\r\n  \"Today Cases\",\r\n  \"Total Deaths\",\r\n  \"Today Deaths\",\r\n  \"Total Recovered\",\r\n  \"Today Recovered\",\r\n];\r\n","import Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport { tableHeader } from \"./data\";\r\nimport { useState } from \"react\";\r\n\r\nfunction CountryTable({\r\n  countries,\r\n  searchCountry,\r\n  tableClass,\r\n  imgClass,\r\n  paperClass,\r\n}) {\r\n  const [valueToOrderBy, setValueToOrderBy] = useState(\"name\");\r\n  const [orderDirection, setOrderDirection] = useState(\"asc\");\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [page, setPage] = useState(0);\r\n\r\n  function changePageHandler(e, newPage) {\r\n    setPage(newPage);\r\n  }\r\n\r\n  function changeRowsPerPageHandler(e) {\r\n    setRowsPerPage(parseInt(e.target.value), 10);\r\n    setPage(0);\r\n  }\r\n\r\n  function changeDirectionHandler(name) {\r\n    const isAsc = name === valueToOrderBy && orderDirection === \"asc\";\r\n    setValueToOrderBy(name);\r\n    setOrderDirection(isAsc ? \"desc\" : \"asc\");\r\n  }\r\n\r\n  function sortFunctionHandler(a, b, valueToOrderBy, orderDirection) {\r\n    switch (valueToOrderBy) {\r\n      case \"Country Name\":\r\n        return orderDirection === \"asc\"\r\n          ? a.country < b.country\r\n            ? -1\r\n            : 1\r\n          : a.country < b.country\r\n          ? 1\r\n          : -1;\r\n      case \"Total Cases\":\r\n        return orderDirection === \"asc\" ? a.cases - b.cases : b.cases - a.cases;\r\n      case \"Today Cases\":\r\n        return orderDirection === \"asc\"\r\n          ? a.todayCases - b.todayCases\r\n          : b.todayCases - a.todayCases;\r\n      case \"Total Deaths\":\r\n        return orderDirection === \"asc\"\r\n          ? a.deaths - b.deaths\r\n          : b.deaths - a.deaths;\r\n      case \"Today Deaths\":\r\n        return orderDirection === \"asc\"\r\n          ? a.todayDeaths - b.todayDeaths\r\n          : b.todayDeaths - a.todayDeaths;\r\n      case \"Total Recovered\":\r\n        return orderDirection === \"asc\"\r\n          ? a.recovered - b.recovered\r\n          : b.recovered - a.recovered;\r\n      case \"Today Recovered\":\r\n        return orderDirection === \"asc\"\r\n          ? a.todayRecovered - b.todayRecovered\r\n          : b.todayRecovered - a.todayRecovered;\r\n      default:\r\n        return 0;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Paper className={paperClass} variant=\"outlined\">\r\n      <Table\r\n        stickyHeader\r\n        aria-label=\"sticky table\"\r\n        className={tableClass}\r\n        size=\"small\"\r\n      >\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            {tableHeader.map((item, index) => (\r\n              <TableCell key={index}>\r\n                <TableSortLabel\r\n                  active={valueToOrderBy === item}\r\n                  direction={valueToOrderBy === item ? orderDirection : \"asc\"}\r\n                  onClick={() => changeDirectionHandler(item)}\r\n                >\r\n                  {item}\r\n                </TableSortLabel>\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {countries\r\n            .filter((item) =>\r\n              searchCountry ? item.country === searchCountry : item\r\n            )\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .sort((a, b) =>\r\n              sortFunctionHandler(a, b, valueToOrderBy, orderDirection)\r\n            )\r\n            .map((country) => (\r\n              <TableRow key={country.countryInfo.id}>\r\n                <TableCell>\r\n                  <img\r\n                    src={country.countryInfo.flag}\r\n                    alt=\"flagImg\"\r\n                    className={imgClass}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>{country.country}</TableCell>\r\n                <TableCell>{country.cases}</TableCell>\r\n                <TableCell>{country.todayCases}</TableCell>\r\n                <TableCell>{country.deaths}</TableCell>\r\n                <TableCell>{country.todayDeaths}</TableCell>\r\n                <TableCell>{country.recovered}</TableCell>\r\n                <TableCell>{country.todayRecovered}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      {!searchCountry ? (\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 15, 20, 25, 50, 100, 222]}\r\n          component=\"div\"\r\n          count={countries.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={changePageHandler}\r\n          onChangeRowsPerPage={changeRowsPerPageHandler}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default CountryTable;\r\n","import \"./App.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CountryTable from \"./components/CountryTable\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  title: {\r\n    marginTop: \"40px\",\r\n    fontWeight: \"400\",\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    margin: \"40px 0\",\r\n  },\r\n  loader: {\r\n    marginTop: \"80px\",\r\n  },\r\n  paper: {\r\n    overflowX: \"auto\",\r\n    width: \"100%\",\r\n    border: \"none\",\r\n  },\r\n  table: {\r\n    \"& thead th:not(:first-child)\": {\r\n      fontWeight: \"600\",\r\n      cursor: \"pointer\",\r\n      transition: \"all .5s ease\",\r\n      borderRadius: \"25px\",\r\n    },\r\n    \"& thead th:first-child\": {\r\n      backgroundColor: \"transparent\",\r\n      border: \"none\",\r\n    },\r\n    \"& thead th:not(:first-child):hover\": {\r\n      backgroundColor: \"#f3f3f3\",\r\n    },\r\n    \"& tbody td\": {\r\n      fontWeight: \"300\",\r\n    },\r\n    \"& tbody tr\": {\r\n      transition: \"all .5s ease\",\r\n    },\r\n    \"& tbody tr:hover\": {\r\n      backgroundColor: \"#f3f3f3\",\r\n      cursor: \"pointer\",\r\n    },\r\n  },\r\n  img: {\r\n    width: \"auto\",\r\n    height: \"auto\",\r\n    objectFit: \"cover\",\r\n  },\r\n}));\r\nfunction App() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [countries, setCountries] = useState([]);\r\n  const [country, setCountry] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  async function getCountryStatistics() {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(\"https://disease.sh/v3/covid-19/countries/\");\r\n      const data = await response.json();\r\n      setLoading(false);\r\n      setCountries(data);\r\n    } catch (e) {\r\n      console.log(\"Error\", e);\r\n      return;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getCountryStatistics();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.root}>\r\n        <Container maxWidth=\"lg\">\r\n          <CircularProgress className={classes.loader} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h2\" className={classes.title}>\r\n          Coronavirus Statistics\r\n        </Typography>\r\n        <Input\r\n          className={classes.input}\r\n          color=\"primary\"\r\n          placeholder=\"Enter a country...\"\r\n          value={country}\r\n          onChange={(e) => setCountry(e.target.value)}\r\n        ></Input>\r\n        <CountryTable\r\n          countries={countries}\r\n          searchCountry={country}\r\n          tableClass={classes.table}\r\n          imgClass={classes.img}\r\n          paperClass={classes.paper}\r\n        />\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}